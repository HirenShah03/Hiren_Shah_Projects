/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PharmacistRole;

import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import Business.Users.User;
import Business.WorkQueue.IssueWorkRequest;
import Business.WorkQueue.PrescriptionItems;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kothari
 */
public class PharmacistWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PharmacistWorkAreaJPanel
     */
    JPanel userProcessContainer;
    EcoSystem system;
    public PharmacistWorkAreaJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboSearchBy = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIssueRequests = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPrescription = new javax.swing.JTable();
        btnPrescribed = new javax.swing.JButton();

        jLabel1.setText("Search By:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel2.setText("Pharmacist Work Area");

        comboSearchBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Issue Request Number", "Username" }));

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });

        tblIssueRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Issue Request Number", "Title"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblIssueRequests.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblIssueRequestsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblIssueRequests);

        tblPrescription.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine", "Dosage"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPrescription.setEnabled(false);
        jScrollPane2.setViewportView(tblPrescription);

        btnPrescribed.setText("Medicines Taken By User");
        btnPrescribed.setEnabled(false);
        btnPrescribed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrescribedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(comboSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnPrescribed, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPrescribed)
                .addContainerGap(29, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
        int key = evt.getKeyCode();
        if (key == evt.VK_ENTER) {
            if(txtSearch.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please enter the message first!","Warning",JOptionPane.WARNING_MESSAGE);
            }else{
                DefaultTableModel model = (DefaultTableModel) tblIssueRequests.getModel();
                model.setRowCount(0);
                if(comboSearchBy.getSelectedItem().equals("Username")){
                    for(User user : system.getUserDir().getUserDir()){
                        for(UserAccount ua : user.getUserAccountDirectory().getUserAccountList()){
                            if(ua.getUsername().equals(txtSearch.getText())){
                                for(WorkRequest wr : ua.getWorkQueue().getWorkRequestList()){
                                    Object row[] = new Object[model.getColumnCount()];
                                    row[0] = wr;
                                    row[1] = wr.getTitle();
                                    model.addRow(row);
                                }
                            }
                        }
                    }
                }else{
                    for(User user : system.getUserDir().getUserDir()){
                        for(UserAccount ua : user.getUserAccountDirectory().getUserAccountList()){
                            for(WorkRequest wr : ua.getWorkQueue().getWorkRequestList()){
                                if(wr.toString().equalsIgnoreCase(txtSearch.getText()))
                                {
                                    Object row[] = new Object[model.getColumnCount()];
                                    row[0] = wr;
                                    row[1] = wr.getTitle();
                                    model.addRow(row);
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_txtSearchKeyPressed

    private void tblIssueRequestsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblIssueRequestsMouseClicked
        // TODO add your handling code here:
        tblPrescription.setEnabled(true);
        btnPrescribed.setEnabled(true);
        int selectedRow = tblIssueRequests.getSelectedRow();
        WorkRequest wr = (WorkRequest)tblIssueRequests.getValueAt(selectedRow, 0);
        DefaultTableModel model = (DefaultTableModel) tblPrescription.getModel();
        model.setRowCount(0);
        for(PrescriptionItems pi : ((IssueWorkRequest)wr).getPrescription().getPrescriptionItems()){
            System.out.print(pi.isStatus());
            if(!pi.isStatus()){
                System.out.println(wr);
                Object [] row = new Object[model.getColumnCount()];
                row[0] = pi;
                row[1] = pi.getDosage();
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_tblIssueRequestsMouseClicked

    private void btnPrescribedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrescribedActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblIssueRequests.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row first!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        for(int i = 0; i < tblPrescription.getRowCount(); i++){
            PrescriptionItems pi = (PrescriptionItems)tblPrescription.getValueAt(i, 0);
            pi.setStatus(true);
        }
        ((DefaultTableModel)tblIssueRequests.getModel()).setRowCount(0);
        ((DefaultTableModel)tblPrescription.getModel()).setRowCount(0);
        WorkRequest wr = (WorkRequest)tblIssueRequests.getValueAt(tblIssueRequests.getSelectedRow(),0);
        tblPrescription.setEnabled(false);
        btnPrescribed.setEnabled(false);
        JOptionPane.showMessageDialog(null, "User receipt of Medicines recorded!");
    }//GEN-LAST:event_btnPrescribedActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPrescribed;
    private javax.swing.JComboBox<String> comboSearchBy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblIssueRequests;
    private javax.swing.JTable tblPrescription;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
